// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5nhZ9m14m3GkNgmNfUwqFT
// Component: TupvYXWeyNsWG7
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import { useScreenVariants as useScreenVariants_1RKeZzinsHHbtQ } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 1rKEZzinsHHbtQ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_copy_of_demassus_portfolio.module.css"; // plasmic-import: 5nhZ9m14m3GkNgmNfUwqFT/projectcss
import sty from "./PlasmicBillie.module.css"; // plasmic-import: TupvYXWeyNsWG7/css

import ChevronDownIcon from "./icons/PlasmicIcon__ChevronDown"; // plasmic-import: JlbvcMdJn6tbQU/icon
import TooltipIcon from "./icons/PlasmicIcon__Tooltip"; // plasmic-import: A4MSyAYgliBYR1/icon
import Divider2Icon from "./icons/PlasmicIcon__Divider2"; // plasmic-import: d6rvCDmAkTSxJ0/icon
import ArrowUpRight2Icon from "./icons/PlasmicIcon__ArrowUpRight2"; // plasmic-import: uMq8FAW9C-Ge9N/icon
import CopyIcon from "./icons/PlasmicIcon__Copy"; // plasmic-import: F4S0SM-as4RejM/icon
import SocialIconIcon from "./icons/PlasmicIcon__SocialIcon"; // plasmic-import: QxpuLapNF68m8r/icon
import SocialIcon2Icon from "./icons/PlasmicIcon__SocialIcon2"; // plasmic-import: 75hvgyMNme3gQv/icon
import Group9Icon from "./icons/PlasmicIcon__Group9"; // plasmic-import: hLvvonv0KeQP8Q/icon

export type PlasmicBillie__VariantMembers = {};

export type PlasmicBillie__VariantsArgs = {};
type VariantPropType = keyof PlasmicBillie__VariantsArgs;
export const PlasmicBillie__VariantProps = new Array<VariantPropType>();

export type PlasmicBillie__ArgsType = {};
type ArgPropType = keyof PlasmicBillie__ArgsType;
export const PlasmicBillie__ArgProps = new Array<ArgPropType>();

export type PlasmicBillie__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<"div">;
  container4?: p.Flex<"div">;
  navigation?: p.Flex<"div">;
  button5?: p.Flex<"div">;
  buttonBase6?: p.Flex<"div">;
  text24?: p.Flex<"div">;
  dropdownHeaderNavigationTrigger?: p.Flex<"div">;
  button6?: p.Flex<"div">;
  buttonBase7?: p.Flex<"div">;
  text25?: p.Flex<"div">;
  dropdownHeaderNavigationTrigger2?: p.Flex<"a"> & Partial<LinkProps>;
  button7?: p.Flex<"div">;
  buttonBase8?: p.Flex<"div">;
  text26?: p.Flex<"div">;
  button8?: p.Flex<"div">;
  buttonBase9?: p.Flex<"div">;
  text27?: p.Flex<"div">;
  blogPosts?: p.Flex<"div">;
  img?: p.Flex<typeof p.PlasmicImg>;
  frame178?: p.Flex<"div">;
  frame170?: p.Flex<"div">;
  frame176?: p.Flex<"div">;
  subheading?: p.Flex<"div">;
  frame175?: p.Flex<"div">;
  heading?: p.Flex<"div">;
  supportingText?: p.Flex<"div">;
  frame177?: p.Flex<"div">;
  badgeBase?: p.Flex<"div">;
  badgeBase2?: p.Flex<"div">;
  text2?: p.Flex<"div">;
  badgeBase3?: p.Flex<"div">;
  text3?: p.Flex<"div">;
  tooltip?: p.Flex<"div">;
  freeBox?: p.Flex<"div">;
  content3?: p.Flex<"div">;
  textAndSupportingText2?: p.Flex<"div">;
  text28?: p.Flex<"div">;
  supportingText7?: p.Flex<"div">;
  section?: p.Flex<"div">;
  container?: p.Flex<"div">;
  content?: p.Flex<"div">;
  containerHighlighted?: p.Flex<"div">;
  containter?: p.Flex<"div">;
  role?: p.Flex<"div">;
  supportingText2?: p.Flex<"div">;
  scope?: p.Flex<"div">;
  supportingText3?: p.Flex<"div">;
  container2?: p.Flex<"div">;
  frame179?: p.Flex<"div">;
  projectObjective?: p.Flex<"div">;
  supportingText4?: p.Flex<"div">;
  timeline?: p.Flex<"div">;
  supportingText5?: p.Flex<"div">;
  container3?: p.Flex<"div">;
  content2?: p.Flex<"div">;
  richText?: p.Flex<"div">;
  section2?: p.Flex<"div">;
  heading2?: p.Flex<"div">;
  intro?: p.Flex<"div">;
  section3?: p.Flex<"div">;
  heading3?: p.Flex<"div">;
  paragraph?: p.Flex<"div">;
  section4?: p.Flex<"div">;
  heading4?: p.Flex<"div">;
  paragraph2?: p.Flex<"div">;
  richTextImg?: p.Flex<"div">;
  image?: p.Flex<"div">;
  text4?: p.Flex<"div">;
  section5?: p.Flex<"div">;
  heading5?: p.Flex<"div">;
  paragraph3?: p.Flex<"div">;
  section6?: p.Flex<"div">;
  heading6?: p.Flex<"div">;
  paragraph4?: p.Flex<"div">;
  paragraph5?: p.Flex<"div">;
  paragraph6?: p.Flex<"div">;
  paragraph7?: p.Flex<"div">;
  richTextImg2?: p.Flex<"div">;
  image2?: p.Flex<"div">;
  text5?: p.Flex<"div">;
  paragraph8?: p.Flex<"div">;
  richTextImg3?: p.Flex<"div">;
  image3?: p.Flex<"div">;
  text6?: p.Flex<"div">;
  section7?: p.Flex<"div">;
  heading7?: p.Flex<"div">;
  paragraph9?: p.Flex<"div">;
  richTextImg4?: p.Flex<"div">;
  image4?: p.Flex<"div">;
  text7?: p.Flex<"div">;
  richTextImg5?: p.Flex<"div">;
  image5?: p.Flex<"div">;
  text8?: p.Flex<"div">;
  paragraph10?: p.Flex<"div">;
  h6?: p.Flex<"h6">;
  blockquote?: p.Flex<"div">;
  leftBorder?: p.Flex<"div">;
  quoteWrap?: p.Flex<"div">;
  quote?: p.Flex<"div">;
  text9?: p.Flex<"div">;
  paragraph11?: p.Flex<"div">;
  richTextImg6?: p.Flex<"div">;
  image6?: p.Flex<"div">;
  text10?: p.Flex<"div">;
  richTextImg7?: p.Flex<"div">;
  image7?: p.Flex<"div">;
  text11?: p.Flex<"div">;
  paragraph12?: p.Flex<"div">;
  richTextImg8?: p.Flex<"div">;
  image8?: p.Flex<"div">;
  text12?: p.Flex<"div">;
  paragraph13?: p.Flex<"div">;
  richTextImg9?: p.Flex<"div">;
  image9?: p.Flex<"div">;
  text13?: p.Flex<"div">;
  paragraph14?: p.Flex<"div">;
  richTextImg10?: p.Flex<"div">;
  image10?: p.Flex<"div">;
  text14?: p.Flex<"div">;
  paragraph15?: p.Flex<"div">;
  richTextImg11?: p.Flex<"div">;
  image11?: p.Flex<"div">;
  text15?: p.Flex<"div">;
  paragraph16?: p.Flex<"div">;
  richTextImg12?: p.Flex<"div">;
  image12?: p.Flex<"div">;
  text16?: p.Flex<"div">;
  section8?: p.Flex<"div">;
  heading8?: p.Flex<"div">;
  paragraph17?: p.Flex<"div">;
  richTextImg13?: p.Flex<"div">;
  image13?: p.Flex<"div">;
  text17?: p.Flex<"div">;
  section9?: p.Flex<"div">;
  paragraph18?: p.Flex<"div">;
  section10?: p.Flex<"div">;
  paragraph19?: p.Flex<"div">;
  richTextImg14?: p.Flex<"div">;
  image14?: p.Flex<"div">;
  text18?: p.Flex<"div">;
  section11?: p.Flex<"div">;
  paragraph20?: p.Flex<"div">;
  richTextImg15?: p.Flex<"div">;
  image15?: p.Flex<"div">;
  text19?: p.Flex<"div">;
  section12?: p.Flex<"div">;
  paragraph21?: p.Flex<"div">;
  section13?: p.Flex<"div">;
  paragraph22?: p.Flex<"div">;
  richTextImg16?: p.Flex<"div">;
  frame180?: p.Flex<"div">;
  frame174?: p.Flex<"div">;
  image16?: p.Flex<"div">;
  image17?: p.Flex<"div">;
  frame181?: p.Flex<"div">;
  image18?: p.Flex<"div">;
  image19?: p.Flex<"div">;
  text20?: p.Flex<"div">;
  frame173?: p.Flex<"div">;
  paragraph23?: p.Flex<"div">;
  buttonBase?: p.Flex<"div">;
  text21?: p.Flex<"div">;
  section14?: p.Flex<"div">;
  paragraph24?: p.Flex<"div">;
  section15?: p.Flex<"div">;
  paragraph25?: p.Flex<"div">;
  section16?: p.Flex<"div">;
  heading9?: p.Flex<"div">;
  paragraph26?: p.Flex<"div">;
  section17?: p.Flex<"div">;
  authorAndSocialLinks?: p.Flex<"div">;
  avatarLabelGroup?: p.Flex<"div">;
  avatar?: p.Flex<"div">;
  textAndSupportingText?: p.Flex<"div">;
  text22?: p.Flex<"div">;
  supportingText6?: p.Flex<"div">;
  socialLinks?: p.Flex<"div">;
  button?: p.Flex<"div">;
  buttonBase2?: p.Flex<"div">;
  text23?: p.Flex<"div">;
  button2?: p.Flex<"div">;
  buttonBase3?: p.Flex<"div">;
  button3?: p.Flex<"div">;
  buttonBase4?: p.Flex<"div">;
  button4?: p.Flex<"div">;
  buttonBase5?: p.Flex<"div">;
  socialIcon?: p.Flex<"div">;
};

export interface DefaultBillieProps {}

function PlasmicBillie__RenderFunc(props: {
  variants: PlasmicBillie__VariantsArgs;
  args: PlasmicBillie__ArgsType;
  overrides: PlasmicBillie__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_1RKeZzinsHHbtQ()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Billie - A personal budgeting app"}</title>
        <meta
          key="og:title"
          property="og:title"
          content={"Billie - A personal budgeting app"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames(projectcss.all, sty.header)}
          >
            <div
              data-plasmic-name={"container4"}
              data-plasmic-override={overrides.container4}
              className={classNames(projectcss.all, sty.container4)}
            >
              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__j34P
                  )}
                  component={Link}
                  href={"/" as const}
                  platform={"nextjs"}
                >
                  {"Demassu"}
                </p.PlasmicLink>
              ) : null}

              <p.Stack
                as={"div"}
                data-plasmic-name={"navigation"}
                data-plasmic-override={overrides.navigation}
                hasGap={true}
                className={classNames(projectcss.all, sty.navigation)}
              >
                <div
                  data-plasmic-name={"button5"}
                  data-plasmic-override={overrides.button5}
                  className={classNames(projectcss.all, sty.button5)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"buttonBase6"}
                    data-plasmic-override={overrides.buttonBase6}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.buttonBase6)}
                  >
                    <div
                      data-plasmic-name={"text24"}
                      data-plasmic-override={overrides.text24}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text24
                      )}
                    >
                      {"About"}
                    </div>
                  </p.Stack>
                </div>

                <div
                  data-plasmic-name={"dropdownHeaderNavigationTrigger"}
                  data-plasmic-override={
                    overrides.dropdownHeaderNavigationTrigger
                  }
                  className={classNames(
                    projectcss.all,
                    sty.dropdownHeaderNavigationTrigger
                  )}
                >
                  <div
                    data-plasmic-name={"button6"}
                    data-plasmic-override={overrides.button6}
                    className={classNames(projectcss.all, sty.button6)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"buttonBase7"}
                      data-plasmic-override={overrides.buttonBase7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.buttonBase7)}
                    >
                      <div
                        data-plasmic-name={"text25"}
                        data-plasmic-override={overrides.text25}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text25
                        )}
                      >
                        {"Selected works"}
                      </div>

                      {false ? (
                        <ChevronDownIcon
                          className={classNames(projectcss.all, sty.svg__exp3F)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </div>
                </div>

                <p.PlasmicLink
                  data-plasmic-name={"dropdownHeaderNavigationTrigger2"}
                  data-plasmic-override={
                    overrides.dropdownHeaderNavigationTrigger2
                  }
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.dropdownHeaderNavigationTrigger2
                  )}
                  component={Link}
                  href={
                    "https://drive.google.com/file/d/1vgvvd75g-qOlASarEFExVm5XespOuaOK/view?usp=sharing" as const
                  }
                  platform={"nextjs"}
                >
                  <div
                    data-plasmic-name={"button7"}
                    data-plasmic-override={overrides.button7}
                    className={classNames(projectcss.all, sty.button7)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"buttonBase8"}
                      data-plasmic-override={overrides.buttonBase8}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.buttonBase8)}
                    >
                      <div
                        data-plasmic-name={"text26"}
                        data-plasmic-override={overrides.text26}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text26
                        )}
                      >
                        {"Resume"}
                      </div>

                      {false ? (
                        <ChevronDownIcon
                          className={classNames(projectcss.all, sty.svg__msGm)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </div>
                </p.PlasmicLink>

                <div
                  data-plasmic-name={"button8"}
                  data-plasmic-override={overrides.button8}
                  className={classNames(projectcss.all, sty.button8)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"buttonBase9"}
                    data-plasmic-override={overrides.buttonBase9}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.buttonBase9)}
                  >
                    <div
                      data-plasmic-name={"text27"}
                      data-plasmic-override={overrides.text27}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text27
                      )}
                    >
                      {"Contact"}
                    </div>
                  </p.Stack>
                </div>
              </p.Stack>
            </div>
          </div>

          <div
            data-plasmic-name={"blogPosts"}
            data-plasmic-override={overrides.blogPosts}
            className={classNames(projectcss.all, sty.blogPosts)}
          >
            <p.PlasmicImg
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(sty.img)}
              displayHeight={"516px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("100%" as const)
                  : ("1440px" as const)
              }
              loading={"lazy" as const}
              src={{
                src: "/plasmic/copy_of_demassus_portfolio/images/headerImage2.svg",
                fullWidth: 1440,
                fullHeight: 516,
                aspectRatio: 2.790698
              }}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame178"}
              data-plasmic-override={overrides.frame178}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame178)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame170"}
                data-plasmic-override={overrides.frame170}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame170)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame176"}
                  data-plasmic-override={overrides.frame176}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame176)}
                >
                  <div
                    data-plasmic-name={"subheading"}
                    data-plasmic-override={overrides.subheading}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.subheading
                    )}
                  >
                    {"Published 27 February 2022"}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"frame175"}
                    data-plasmic-override={overrides.frame175}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame175)}
                  >
                    <div
                      data-plasmic-name={"heading"}
                      data-plasmic-override={overrides.heading}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.heading
                      )}
                    >
                      {"Billie - A personal Budgeting app"}
                    </div>

                    <div
                      data-plasmic-name={"supportingText"}
                      data-plasmic-override={overrides.supportingText}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.supportingText
                      )}
                    >
                      {
                        "Billie is an app to manage and track monthly spending and income, help to budget your future monthly spending and income, and create a report for your transaction."
                      }
                    </div>
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame177"}
                  data-plasmic-override={overrides.frame177}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame177)}
                >
                  <div
                    data-plasmic-name={"badgeBase"}
                    data-plasmic-override={overrides.badgeBase}
                    className={classNames(projectcss.all, sty.badgeBase)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__azlDm
                      )}
                    >
                      {"Design"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"badgeBase2"}
                    data-plasmic-override={overrides.badgeBase2}
                    className={classNames(projectcss.all, sty.badgeBase2)}
                  >
                    <div
                      data-plasmic-name={"text2"}
                      data-plasmic-override={overrides.text2}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text2
                      )}
                    >
                      {"Research"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"badgeBase3"}
                    data-plasmic-override={overrides.badgeBase3}
                    className={classNames(projectcss.all, sty.badgeBase3)}
                  >
                    <div
                      data-plasmic-name={"text3"}
                      data-plasmic-override={overrides.text3}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text3
                      )}
                    >
                      {"Mockup"}
                    </div>
                  </div>
                </p.Stack>

                <div
                  data-plasmic-name={"tooltip"}
                  data-plasmic-override={overrides.tooltip}
                  className={classNames(projectcss.all, sty.tooltip)}
                >
                  <div
                    data-plasmic-name={"freeBox"}
                    data-plasmic-override={overrides.freeBox}
                    className={classNames(projectcss.all, sty.freeBox)}
                  >
                    <TooltipIcon
                      className={classNames(projectcss.all, sty.svg__qUeB0)}
                      role={"img"}
                    />
                  </div>

                  <div
                    data-plasmic-name={"content3"}
                    data-plasmic-override={overrides.content3}
                    className={classNames(projectcss.all, sty.content3)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"textAndSupportingText2"}
                      data-plasmic-override={overrides.textAndSupportingText2}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.textAndSupportingText2
                      )}
                    >
                      <div
                        data-plasmic-name={"text28"}
                        data-plasmic-override={overrides.text28}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text28
                        )}
                      >
                        {"You're on a pre-published view"}
                      </div>

                      <div
                        data-plasmic-name={"supportingText7"}
                        data-plasmic-override={overrides.supportingText7}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.supportingText7
                        )}
                      >
                        {
                          "This page is on a repairment for text hierarchy & legibility"
                        }
                      </div>
                    </p.Stack>
                  </div>
                </div>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              hasGap={true}
              className={classNames(projectcss.all, sty.section)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"container"}
                data-plasmic-override={overrides.container}
                hasGap={true}
                className={classNames(projectcss.all, sty.container)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content"}
                  data-plasmic-override={overrides.content}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"containerHighlighted"}
                    data-plasmic-override={overrides.containerHighlighted}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.containerHighlighted
                    )}
                  >
                    <div
                      data-plasmic-name={"containter"}
                      data-plasmic-override={overrides.containter}
                      className={classNames(projectcss.all, sty.containter)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"role"}
                        data-plasmic-override={overrides.role}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.role)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__srsgm
                          )}
                        >
                          {"Role"}
                        </div>

                        <div
                          data-plasmic-name={"supportingText2"}
                          data-plasmic-override={overrides.supportingText2}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.supportingText2
                          )}
                        >
                          {"UXUI Designer"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"scope"}
                        data-plasmic-override={overrides.scope}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.scope)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__o1IIr
                          )}
                        >
                          {"Scope"}
                        </div>

                        <div
                          data-plasmic-name={"supportingText3"}
                          data-plasmic-override={overrides.supportingText3}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.supportingText3
                          )}
                        >
                          {"Brainstorming, Define, Ideate, Design"}
                        </div>
                      </p.Stack>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"container2"}
                      data-plasmic-override={overrides.container2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.container2)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"frame179"}
                        data-plasmic-override={overrides.frame179}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame179)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"projectObjective"}
                          data-plasmic-override={overrides.projectObjective}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.projectObjective
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__tfnI6
                            )}
                          >
                            {"Project Objective"}
                          </div>

                          <div
                            data-plasmic-name={"supportingText4"}
                            data-plasmic-override={overrides.supportingText4}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.supportingText4
                            )}
                          >
                            {
                              "To create a mockup for Monthly Spending & Income Feature, from defining to designing"
                            }
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"timeline"}
                          data-plasmic-override={overrides.timeline}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.timeline)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cPs8B
                            )}
                          >
                            {"Timeline"}
                          </div>

                          <div
                            data-plasmic-name={"supportingText5"}
                            data-plasmic-override={overrides.supportingText5}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.supportingText5
                            )}
                          >
                            {"20 Nov - 28 Jan (1 week)"}
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"container3"}
                data-plasmic-override={overrides.container3}
                hasGap={true}
                className={classNames(projectcss.all, sty.container3)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"content2"}
                  data-plasmic-override={overrides.content2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content2)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"richText"}
                    data-plasmic-override={overrides.richText}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.richText)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section2"}
                      data-plasmic-override={overrides.section2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section2)}
                    >
                      <div
                        data-plasmic-name={"heading2"}
                        data-plasmic-override={overrides.heading2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading2
                        )}
                      >
                        {"Project Overview"}
                      </div>

                      <div
                        data-plasmic-name={"intro"}
                        data-plasmic-override={overrides.intro}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.intro
                        )}
                      >
                        {
                          "The objective of this study is to make a fintech app named Billie which is an app to manage and track monthly spending and income, help to budget your future monthly spending and income, and create a report for your transaction.\n\n\r\nI did simple planning in Google Spreadsheet. The primary tool that I used is Figma, as a tool to brainstorm, make initial pain points, initial customer flow, and as a design and prototype tool. For the logo, I created it in adobe illustrator."
                        }
                      </div>

                      <Divider2Icon
                        className={classNames(projectcss.all, sty.svg__qGgEb)}
                        role={"img"}
                      />
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section3"}
                      data-plasmic-override={overrides.section3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section3)}
                    >
                      <div
                        data-plasmic-name={"heading3"}
                        data-plasmic-override={overrides.heading3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading3
                        )}
                      >
                        {"Task"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph"}
                        data-plasmic-override={overrides.paragraph}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul___7TvPc
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__pnVqM
                              )}
                            >
                              {
                                "Define an appropriate brand color & logo design"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__xPXg
                              )}
                            >
                              {
                                "\r\nChoose one feature and create user interfaces(mobile/desktop) and prototypes that can help your users overcome their problems and provide insights for them.\r"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__tGpqM
                              )}
                            >
                              {
                                "Explore technologies that have the possibility to be applied to your app"
                              }
                            </li>
                          </ul>
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section4"}
                      data-plasmic-override={overrides.section4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section4)}
                    >
                      <div
                        data-plasmic-name={"heading4"}
                        data-plasmic-override={overrides.heading4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading4
                        )}
                      >
                        {"Design Process"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph2"}
                        data-plasmic-override={overrides.paragraph2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph2
                        )}
                      >
                        {
                          "I used Design Thinking as a framework process for this project."
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg"}
                      data-plasmic-override={overrides.richTextImg}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg)}
                    >
                      <div
                        data-plasmic-name={"image"}
                        data-plasmic-override={overrides.image}
                        className={classNames(projectcss.all, sty.image)}
                      />

                      <div
                        data-plasmic-name={"text4"}
                        data-plasmic-override={overrides.text4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text4
                        )}
                      >
                        {"Image of Design Process"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section5"}
                      data-plasmic-override={overrides.section5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section5)}
                    >
                      <div
                        data-plasmic-name={"heading5"}
                        data-plasmic-override={overrides.heading5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading5
                        )}
                      >
                        {"Discovery"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph3"}
                        data-plasmic-override={overrides.paragraph3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph3
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>
                            {
                              "I did observation, formed questions, and navigated to several case studies and other relevant fintech apps to understand how they approached this problem and how I can improve from that.\n\n\r\n"
                            }
                          </React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 500 }}
                          >
                            {"What is financial technology?"}
                          </span>
                          <React.Fragment>
                            {
                              "\r\nBasically, fintech refers to new tech offering assistance in financial services for businesses and customers to improve financial operations, processes, and lives aided by specialized tools. Source: S&P Global\n\n\r\n"
                            }
                          </React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 500 }}
                          >
                            {
                              "What type of fintech segments to look up for relevant features?"
                            }
                          </span>
                          <React.Fragment>
                            {
                              "\r\nFintech constitutes various types of services and features, there are many things to look up and explore but for this study, the focus would be on Budgeting, E-wallet, and Personal Finance.\n\n\r\nAt this phase, I did look up several competitor apps that can be beneficial for making a value proposition later. However, I have to admit I did not make any documentation during the process."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section6"}
                      data-plasmic-override={overrides.section6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section6)}
                    >
                      <div
                        data-plasmic-name={"heading6"}
                        data-plasmic-override={overrides.heading6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading6
                        )}
                      >
                        {"Define"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph4"}
                        data-plasmic-override={overrides.paragraph4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph4
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5___8C8Hy
                            )}
                          >
                            {"Target Audience\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "Employed or Working Professional\r\nMid Class\r\n25–40 y.o\r\nLove to try something new, busy schedule\r\nMillennials\r"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph5"}
                      data-plasmic-override={overrides.paragraph5}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph5
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__iGfp9
                          )}
                        >
                          {"User story\r"}
                        </h5>
                        <React.Fragment>
                          {
                            "The purpose of this step was to maintain the problem user-centered, actionable, and clear. This process feels necessary as it establishes clear boundaries to focus on user goals.\n"
                          }
                        </React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__uf0NH
                          )}
                        >
                          {"Draft User story\r"}
                        </h5>
                        <React.Fragment>
                          {
                            "As a millennial who is just stepped into the professional world\r\nI want to be able to manage my income and expenses properly\r\nSo that I can focus on working my way to improve my skills\r\n"
                          }
                        </React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__aX7Ug
                          )}
                        >
                          {"Refined User Story\r"}
                        </h5>
                        <React.Fragment>
                          {
                            "As a currently employed auditor who has a poor track record of handling my personal finances\r\nI want to get insights into my financial state to examine my income & expense at a certain time\r\nSo that I can have my savings to send for my parent every month"
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>

                    <div
                      data-plasmic-name={"paragraph6"}
                      data-plasmic-override={overrides.paragraph6}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph6
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__aKnMi
                          )}
                        >
                          {"Initial Assumption\r"}
                        </h5>
                        <React.Fragment>
                          {
                            "Millennials who just stepped into the professional world are suffering and not able to manage their income and expenses properly."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>

                    <div
                      data-plasmic-name={"paragraph7"}
                      data-plasmic-override={overrides.paragraph7}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph7
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__ervWi
                          )}
                        >
                          {"Point of view"}
                        </h5>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg2"}
                      data-plasmic-override={overrides.richTextImg2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg2)}
                    >
                      <div
                        data-plasmic-name={"image2"}
                        data-plasmic-override={overrides.image2}
                        className={classNames(projectcss.all, sty.image2)}
                      />

                      <div
                        data-plasmic-name={"text5"}
                        data-plasmic-override={overrides.text5}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text5
                        )}
                      >
                        {"Image of Point of View"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph8"}
                      data-plasmic-override={overrides.paragraph8}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph8
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__rfIeq
                          )}
                        >
                          {"How Might We(I)"}
                        </h5>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg3"}
                      data-plasmic-override={overrides.richTextImg3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg3)}
                    >
                      <div
                        data-plasmic-name={"image3"}
                        data-plasmic-override={overrides.image3}
                        className={classNames(projectcss.all, sty.image3)}
                      />

                      <div
                        data-plasmic-name={"text6"}
                        data-plasmic-override={overrides.text6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text6
                        )}
                      >
                        {"Image of How Might We"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section7"}
                      data-plasmic-override={overrides.section7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section7)}
                    >
                      <div
                        data-plasmic-name={"heading7"}
                        data-plasmic-override={overrides.heading7}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading7
                        )}
                      >
                        {"Ideate"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph9"}
                        data-plasmic-override={overrides.paragraph9}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph9
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__tr7Xp
                            )}
                          >
                            {"Solution Feature & Prioritization idea\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "I brainstormed as many different solutions for each HMW as feasible based on the POV and HMI that I created."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg4"}
                      data-plasmic-override={overrides.richTextImg4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg4)}
                    >
                      <div
                        data-plasmic-name={"image4"}
                        data-plasmic-override={overrides.image4}
                        className={classNames(projectcss.all, sty.image4)}
                      />

                      <div
                        data-plasmic-name={"text7"}
                        data-plasmic-override={overrides.text7}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text7
                        )}
                      >
                        {"Image of Solution Feature"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg5"}
                      data-plasmic-override={overrides.richTextImg5}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg5)}
                    >
                      <div
                        data-plasmic-name={"image5"}
                        data-plasmic-override={overrides.image5}
                        className={classNames(projectcss.all, sty.image5)}
                      />

                      <div
                        data-plasmic-name={"text8"}
                        data-plasmic-override={overrides.text8}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text8
                        )}
                      >
                        {"Image of Idea Prioritazion"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph10"}
                      data-plasmic-override={overrides.paragraph10}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph10
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__o0A4D
                          )}
                        >
                          {"Initial Solution"}
                        </h5>
                        <React.Fragment>
                          {
                            "Based on the task and the solution idea, I was able to draw out some additional features for the app that might be useful for users. The definite task of Billie above is the must-have feature, thus the app becomes:\n\n"
                          }
                        </React.Fragment>
                        <h6
                          data-plasmic-name={"h6"}
                          data-plasmic-override={overrides.h6}
                          className={classNames(
                            projectcss.all,
                            projectcss.h6,
                            projectcss.__wab_text,
                            sty.h6
                          )}
                        >
                          {
                            "The integrated Financial Management & Transaction App"
                          }
                        </h6>
                        <React.Fragment>{""}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontStyle: "italic" }}
                        >
                          {
                            "Berfungsi sebagai dompet digital terintegrasi dengan bank dan dompet digital marketplace dengan menyediakan fitur mentransfer, mengatur (money management), mencatat pemasukan dan pengeluaran (monitor your transactions) berdasarkan akun yang telah terdaftar."
                          }
                        </span>
                        <React.Fragment>
                          {
                            "\n\nIn this case, the user needs to think that managing spending and income is not necessarily thrilling but otherwise. Understanding their own spending behavior is the first step toward better money management, followed by deciding how to reduce expenses. Then, the next step is to put those into savings. I found that organizing and managing future spending and income can be like a balancing act. This is the kind of gamification that can be offered at the Billie app. The form of self-determination theory that applied when the user feels good and in control of the situation."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"blockquote"}
                      data-plasmic-override={overrides.blockquote}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.blockquote)}
                    >
                      <div
                        data-plasmic-name={"leftBorder"}
                        data-plasmic-override={overrides.leftBorder}
                        className={classNames(projectcss.all, sty.leftBorder)}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"quoteWrap"}
                        data-plasmic-override={overrides.quoteWrap}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.quoteWrap)}
                      >
                        <div
                          data-plasmic-name={"quote"}
                          data-plasmic-override={overrides.quote}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.quote
                          )}
                        >
                          {
                            "“Deci and Ryan’s self-determination theory recognizes the feelings of competence, autonomy, and relatedness as necessary in order to be able to appreciate an action for itself.”"
                          }
                        </div>

                        <div
                          data-plasmic-name={"text9"}
                          data-plasmic-override={overrides.text9}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text9
                          )}
                        >
                          {"— From SQLI Digital Experience"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph11"}
                      data-plasmic-override={overrides.paragraph11}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph11
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__qcOwF
                          )}
                        >
                          {"Logo & Tagline\r"}
                        </h5>
                        <React.Fragment>
                          {
                            "In terms of choosing colors, what comes to mind when making a fintech app is I need to establish trust while also engaging users to use the app without stress and pressure. Thus, I decide to use blue #2658FF as a primary color as this color fulfills the color familiarity in the industry and is able to communicate the brand's meaning. "
                          }
                        </React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__jJtPx
                          )}
                          component={Link}
                          href={
                            "https://graf1x.com/wp-content/uploads/2014/09/color-psychology-meaning-emotion-poster.jpg" as const
                          }
                          platform={"nextjs"}
                        >
                          {"Source"}
                        </p.PlasmicLink>
                        <React.Fragment>
                          {
                            "\n\n\r\nAlso, I need to make the ideation branches of the logo super fast because of the limited time and the relevancy to the project. Therefore, I didn’t spend too much time during this process, I rather prioritize the design and UX stuff."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg6"}
                      data-plasmic-override={overrides.richTextImg6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg6)}
                    >
                      <div
                        data-plasmic-name={"image6"}
                        data-plasmic-override={overrides.image6}
                        className={classNames(projectcss.all, sty.image6)}
                      />

                      <div
                        data-plasmic-name={"text10"}
                        data-plasmic-override={overrides.text10}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text10
                        )}
                      >
                        {"Image of Ideation Branch"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg7"}
                      data-plasmic-override={overrides.richTextImg7}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg7)}
                    >
                      <div
                        data-plasmic-name={"image7"}
                        data-plasmic-override={overrides.image7}
                        className={classNames(projectcss.all, sty.image7)}
                      />

                      <div
                        data-plasmic-name={"text11"}
                        data-plasmic-override={overrides.text11}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text11
                        )}
                      >
                        {"Image of Logo idea sketch"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph12"}
                      data-plasmic-override={overrides.paragraph12}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph12
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__h8KmM
                          )}
                        >
                          {"Final Logo & Tagline"}
                        </h5>
                        <React.Fragment>
                          {
                            "I had to spend one hour and a half creating a tagline. I need a tagline that is simple and interesting while also effortless to remember. Thanks to this thread, I got the insight to create the tagline that I wanted. I wanted the tagline to start with the advantage of the feature. “easily manage, hardly stress”. Although a bit silly, I really liked the tagline."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg8"}
                      data-plasmic-override={overrides.richTextImg8}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg8)}
                    >
                      <div
                        data-plasmic-name={"image8"}
                        data-plasmic-override={overrides.image8}
                        className={classNames(projectcss.all, sty.image8)}
                      />

                      <div
                        data-plasmic-name={"text12"}
                        data-plasmic-override={overrides.text12}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text12
                        )}
                      >
                        {"Image of Final Logo Design"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph13"}
                      data-plasmic-override={overrides.paragraph13}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph13
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__qgCve
                          )}
                        >
                          {"Sitemap"}
                        </h5>
                        <React.Fragment>
                          {
                            "I created the sitemap to organize the screen and what kind of information can be put on the screen."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg9"}
                      data-plasmic-override={overrides.richTextImg9}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg9)}
                    >
                      <div
                        data-plasmic-name={"image9"}
                        data-plasmic-override={overrides.image9}
                        className={classNames(projectcss.all, sty.image9)}
                      />

                      <div
                        data-plasmic-name={"text13"}
                        data-plasmic-override={overrides.text13}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text13
                        )}
                      >
                        {"Image of Sitemap"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph14"}
                      data-plasmic-override={overrides.paragraph14}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph14
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__yZkBh
                          )}
                        >
                          {"Customer Journey"}
                        </h5>
                        <React.Fragment>
                          {
                            "I built out a customer journey map with the content from the as-is scenario, this helped me to figure out what users going through during the flow."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg10"}
                      data-plasmic-override={overrides.richTextImg10}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg10)}
                    >
                      <div
                        data-plasmic-name={"image10"}
                        data-plasmic-override={overrides.image10}
                        className={classNames(projectcss.all, sty.image10)}
                      />

                      <div
                        data-plasmic-name={"text14"}
                        data-plasmic-override={overrides.text14}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text14
                        )}
                      >
                        {"Image of Customer Journey"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph15"}
                      data-plasmic-override={overrides.paragraph15}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph15
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__wxkjb
                          )}
                        >
                          {"Userflow"}
                        </h5>
                        <React.Fragment>
                          {
                            "A user flow chart was the last step I took before I was able to start designing prototypes. I had to identify “a happy path” goal needing to be accomplished by the user within the app.\n\n\r\nAfter finalizing my ideas, I created a user flow following my previous ideation for the first registered user to manage their income & expense from the step of connecting wallet to organizing payment."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg11"}
                      data-plasmic-override={overrides.richTextImg11}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg11)}
                    >
                      <div
                        data-plasmic-name={"image11"}
                        data-plasmic-override={overrides.image11}
                        className={classNames(projectcss.all, sty.image11)}
                      />

                      <div
                        data-plasmic-name={"text15"}
                        data-plasmic-override={overrides.text15}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text15
                        )}
                      >
                        {"Image of Userflow"}
                      </div>
                    </p.Stack>

                    <div
                      data-plasmic-name={"paragraph16"}
                      data-plasmic-override={overrides.paragraph16}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.paragraph16
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__qxgji
                          )}
                        >
                          {"Low-fidelity"}
                        </h5>
                        <React.Fragment>
                          {
                            "I created a low–fidelity screen with pencil & paper to get a clear idea of what the screen will look like later. This phase and later on is where design pattern, reference, and mood board can be very useful."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg12"}
                      data-plasmic-override={overrides.richTextImg12}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg12)}
                    >
                      <div
                        data-plasmic-name={"image12"}
                        data-plasmic-override={overrides.image12}
                        className={classNames(projectcss.all, sty.image12)}
                      />

                      <div
                        data-plasmic-name={"text16"}
                        data-plasmic-override={overrides.text16}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text16
                        )}
                      >
                        {"Image of Low Fidelity/Sketch"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section8"}
                      data-plasmic-override={overrides.section8}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section8)}
                    >
                      <div
                        data-plasmic-name={"heading8"}
                        data-plasmic-override={overrides.heading8}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading8
                        )}
                      >
                        {"Prototype"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph17"}
                        data-plasmic-override={overrides.paragraph17}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph17
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__ajVQq
                            )}
                          >
                            {"Wireframe\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "From the user flow that has been created, I proceed my way to create a wireframe based on a small portion of user flow referencing the before crazy 8’s low fidelity screen."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg13"}
                      data-plasmic-override={overrides.richTextImg13}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg13)}
                    >
                      <div
                        data-plasmic-name={"image13"}
                        data-plasmic-override={overrides.image13}
                        className={classNames(projectcss.all, sty.image13)}
                      />

                      <div
                        data-plasmic-name={"text17"}
                        data-plasmic-override={overrides.text17}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text17
                        )}
                      >
                        {"Image of Wireframe"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section9"}
                      data-plasmic-override={overrides.section9}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section9)}
                    >
                      <div
                        data-plasmic-name={"paragraph18"}
                        data-plasmic-override={overrides.paragraph18}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph18
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__zUr7
                            )}
                          >
                            {"HI-FI\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "After developing the wireframe, I finally proceeded to design the hi-fi design. In this process, I begin with the basics, such as defining colors and fonts for items that are consistent with the brand.\r"
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section10"}
                      data-plasmic-override={overrides.section10}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section10)}
                    >
                      <div
                        data-plasmic-name={"paragraph19"}
                        data-plasmic-override={overrides.paragraph19}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph19
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>
                            {
                              "UI Guideline\r\nI created a basic UI Guideline to design the UI of this app. This UI design guideline could help me to design in a consistent way during a high-fidelity design.\r\nSome parts that I created:\n\n\r\n"
                            }
                          </React.Fragment>
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__j4FlO
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__dTfN
                              )}
                            >
                              {"“Gilroy” is the main typeface.\n"}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li___4G3RY
                              )}
                            >
                              {"“Circular Std” is the logotype."}
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li___09Mcu
                              )}
                            >
                              {
                                "\r\nI used Blue #2658FF as the primary brand color while Orange #FFA62B, Turquoise #00C2D1, and Dark Blue #F7BE00 are for accent colors. These colors were obtained based on the logo colors.\r"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__qcsJd
                              )}
                            >
                              {
                                "I used the Microsoft Fluent system icon for iconography because it has appealing rounded corners that are ‘easier on the eyes’\r"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__kSkSv
                              )}
                            >
                              {
                                "I reference material UI for the design framework as closely as I can\r"
                              }
                            </li>
                          </ul>
                          <React.Fragment>{"\n"}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontStyle: "italic" }}
                          >
                            {
                              "Note: Due to a time issue, I could not make other design components and variables. However, several iterations might solve this issue."
                            }
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg14"}
                      data-plasmic-override={overrides.richTextImg14}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg14)}
                    >
                      <div
                        data-plasmic-name={"image14"}
                        data-plasmic-override={overrides.image14}
                        className={classNames(projectcss.all, sty.image14)}
                      />

                      <div
                        data-plasmic-name={"text18"}
                        data-plasmic-override={overrides.text18}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text18
                        )}
                      >
                        {"Image of UI Guideline - Color"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section11"}
                      data-plasmic-override={overrides.section11}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section11)}
                    >
                      <div
                        data-plasmic-name={"paragraph20"}
                        data-plasmic-override={overrides.paragraph20}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph20
                        )}
                      >
                        {
                          "See the screen concept changes from Lo-fi to wireframe? the same as Hi-fi, I had to iterate some of the contents which takes some time to create. Here is the version of the Hi-Fi prototype:"
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg15"}
                      data-plasmic-override={overrides.richTextImg15}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg15)}
                    >
                      <div
                        data-plasmic-name={"image15"}
                        data-plasmic-override={overrides.image15}
                        className={classNames(projectcss.all, sty.image15)}
                      />

                      <div
                        data-plasmic-name={"text19"}
                        data-plasmic-override={overrides.text19}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text19
                        )}
                      >
                        {"Image of 3 Final Design"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section12"}
                      data-plasmic-override={overrides.section12}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section12)}
                    >
                      <div
                        data-plasmic-name={"paragraph21"}
                        data-plasmic-override={overrides.paragraph21}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph21
                        )}
                      >
                        {
                          "I considered the UX law of common region that is “Elements tend to be perceived into groups if they are sharing an area with a clearly defined boundary”. For example, the function of the statistic text is to describe the graph but as you can see in the wireframe, the text is kind of detached from the graph. Overall, I personally liked the design because it looks as clean as I wanted. However, it still needs validation and iteration at some parts."
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section13"}
                      data-plasmic-override={overrides.section13}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section13)}
                    >
                      <div
                        data-plasmic-name={"paragraph22"}
                        data-plasmic-override={overrides.paragraph22}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph22
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__mun1G
                            )}
                          >
                            {"Prototype & Mockup\r"}
                          </h5>
                          <React.Fragment>
                            {
                              "After feeling complete with the user interface design, then I continued to create some mockups to assist users to overcome their problems and provide insights for them. Take a look at the pics below.\r\nAlso, I created a simple prototype to show how the sections work. However, again due to time boundaries I get only to prototype the interaction between the screen section."
                            }
                          </React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"richTextImg16"}
                      data-plasmic-override={overrides.richTextImg16}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.richTextImg16)}
                    >
                      <div
                        data-plasmic-name={"frame180"}
                        data-plasmic-override={overrides.frame180}
                        className={classNames(projectcss.all, sty.frame180)}
                      >
                        <div
                          data-plasmic-name={"frame174"}
                          data-plasmic-override={overrides.frame174}
                          className={classNames(projectcss.all, sty.frame174)}
                        >
                          <div
                            data-plasmic-name={"image16"}
                            data-plasmic-override={overrides.image16}
                            className={classNames(projectcss.all, sty.image16)}
                          />

                          <div
                            data-plasmic-name={"image17"}
                            data-plasmic-override={overrides.image17}
                            className={classNames(projectcss.all, sty.image17)}
                          />
                        </div>

                        <div
                          data-plasmic-name={"frame181"}
                          data-plasmic-override={overrides.frame181}
                          className={classNames(projectcss.all, sty.frame181)}
                        >
                          <div
                            data-plasmic-name={"image18"}
                            data-plasmic-override={overrides.image18}
                            className={classNames(projectcss.all, sty.image18)}
                          />

                          <div
                            data-plasmic-name={"image19"}
                            data-plasmic-override={overrides.image19}
                            className={classNames(projectcss.all, sty.image19)}
                          />
                        </div>
                      </div>

                      <div
                        data-plasmic-name={"text20"}
                        data-plasmic-override={overrides.text20}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text20
                        )}
                      >
                        {"Image of Mockups & Screen Walkthrough"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"frame173"}
                      data-plasmic-override={overrides.frame173}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame173)}
                    >
                      <div
                        data-plasmic-name={"paragraph23"}
                        data-plasmic-override={overrides.paragraph23}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph23
                        )}
                      >
                        {
                          "Still curious? Take a peek at the Figma Prototype below!\r"
                        }
                      </div>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"buttonBase"}
                        data-plasmic-override={overrides.buttonBase}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.buttonBase)}
                      >
                        <div
                          data-plasmic-name={"text21"}
                          data-plasmic-override={overrides.text21}
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text21
                          )}
                        >
                          {"Link to Prototype"}
                        </div>

                        <ArrowUpRight2Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___7DpiZ
                          )}
                          role={"img"}
                        />
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section14"}
                      data-plasmic-override={overrides.section14}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section14)}
                    >
                      <div
                        data-plasmic-name={"paragraph24"}
                        data-plasmic-override={overrides.paragraph24}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph24
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5___8PqXl
                            )}
                          >
                            {"Design Flaws"}
                          </h5>
                          <React.Fragment>
                            {
                              "There are some design flaws and pain points within the design screen that the user and I noticed. Here are the reviews and note down:\r\n"
                            }
                          </React.Fragment>
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__fcXu7
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__fya9M
                              )}
                            >
                              {
                                "There is no text color and label for the graph of the monthly budget."
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__by7G1
                              )}
                            >
                              {
                                "\r\nHow does the user know when they exceed the monthly budget? the design fails to assist that\r"
                              }
                            </li>

                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__wZ6T
                              )}
                            >
                              {
                                "The filter in the transaction is confusing, what does it contain?\r"
                              }
                            </li>
                          </ul>
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section15"}
                      data-plasmic-override={overrides.section15}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section15)}
                    >
                      <div
                        data-plasmic-name={"paragraph25"}
                        data-plasmic-override={overrides.paragraph25}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph25
                        )}
                      >
                        {
                          "Thankyou for reading till the end 👋, have a great day!"
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section16"}
                      data-plasmic-override={overrides.section16}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section16)}
                    >
                      <div
                        data-plasmic-name={"heading9"}
                        data-plasmic-override={overrides.heading9}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.heading9
                        )}
                      >
                        {"What’s Next?"}
                      </div>

                      <div
                        data-plasmic-name={"paragraph26"}
                        data-plasmic-override={overrides.paragraph26}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.paragraph26
                        )}
                      >
                        {
                          "What’s next? the design process has to continue as the design needs validation from the user and some iteration to improve. However, to make this a straight week design challenge, I leave the design remain as it is, with no iteration."
                        }
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"section17"}
                      data-plasmic-override={overrides.section17}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.section17)}
                    >
                      <Divider2Icon
                        className={classNames(projectcss.all, sty.svg__k0MsW)}
                        role={"img"}
                      />

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"authorAndSocialLinks"}
                        data-plasmic-override={overrides.authorAndSocialLinks}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.authorAndSocialLinks
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"avatarLabelGroup"}
                          data-plasmic-override={overrides.avatarLabelGroup}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.avatarLabelGroup
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"avatar"}
                              data-plasmic-override={overrides.avatar}
                              className={classNames(projectcss.all, sty.avatar)}
                            />
                          ) : null}

                          <div
                            data-plasmic-name={"textAndSupportingText"}
                            data-plasmic-override={
                              overrides.textAndSupportingText
                            }
                            className={classNames(
                              projectcss.all,
                              sty.textAndSupportingText
                            )}
                          >
                            <div
                              data-plasmic-name={"text22"}
                              data-plasmic-override={overrides.text22}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text22
                              )}
                            >
                              {"Demas Bermani Surya"}
                            </div>

                            <div
                              data-plasmic-name={"supportingText6"}
                              data-plasmic-override={overrides.supportingText6}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.supportingText6
                              )}
                            >
                              {"Aspiring UI/UX Designer"}
                            </div>
                          </div>
                        </p.Stack>

                        {false ? (
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"socialLinks"}
                            data-plasmic-override={overrides.socialLinks}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.socialLinks
                            )}
                          >
                            <div
                              data-plasmic-name={"button"}
                              data-plasmic-override={overrides.button}
                              className={classNames(projectcss.all, sty.button)}
                            >
                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"buttonBase2"}
                                data-plasmic-override={overrides.buttonBase2}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.buttonBase2
                                )}
                              >
                                <CopyIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__cYhC
                                  )}
                                  role={"img"}
                                />

                                <div
                                  data-plasmic-name={"text23"}
                                  data-plasmic-override={overrides.text23}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text23
                                  )}
                                >
                                  {"Copy link"}
                                </div>
                              </p.Stack>
                            </div>

                            <div
                              data-plasmic-name={"button2"}
                              data-plasmic-override={overrides.button2}
                              className={classNames(
                                projectcss.all,
                                sty.button2
                              )}
                            >
                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"buttonBase3"}
                                data-plasmic-override={overrides.buttonBase3}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.buttonBase3
                                )}
                              >
                                <SocialIconIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__nFwg9
                                  )}
                                  role={"img"}
                                />
                              </p.Stack>
                            </div>

                            <div
                              data-plasmic-name={"button3"}
                              data-plasmic-override={overrides.button3}
                              className={classNames(
                                projectcss.all,
                                sty.button3
                              )}
                            >
                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"buttonBase4"}
                                data-plasmic-override={overrides.buttonBase4}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.buttonBase4
                                )}
                              >
                                <SocialIcon2Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___5FqH
                                  )}
                                  role={"img"}
                                />
                              </p.Stack>
                            </div>

                            <div
                              data-plasmic-name={"button4"}
                              data-plasmic-override={overrides.button4}
                              className={classNames(
                                projectcss.all,
                                sty.button4
                              )}
                            >
                              <p.Stack
                                as={"div"}
                                data-plasmic-name={"buttonBase5"}
                                data-plasmic-override={overrides.buttonBase5}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.buttonBase5
                                )}
                              >
                                <div
                                  data-plasmic-name={"socialIcon"}
                                  data-plasmic-override={overrides.socialIcon}
                                  className={classNames(
                                    projectcss.all,
                                    sty.socialIcon
                                  )}
                                >
                                  <Group9Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__zcuGg
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </p.Stack>
                            </div>
                          </p.Stack>
                        ) : null}
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "container4",
    "navigation",
    "button5",
    "buttonBase6",
    "text24",
    "dropdownHeaderNavigationTrigger",
    "button6",
    "buttonBase7",
    "text25",
    "dropdownHeaderNavigationTrigger2",
    "button7",
    "buttonBase8",
    "text26",
    "button8",
    "buttonBase9",
    "text27",
    "blogPosts",
    "img",
    "frame178",
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "tooltip",
    "freeBox",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7",
    "section",
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "paragraph",
    "section4",
    "heading4",
    "paragraph2",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "section6",
    "heading6",
    "paragraph4",
    "paragraph5",
    "paragraph6",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg4",
    "image4",
    "text7",
    "richTextImg5",
    "image5",
    "text8",
    "paragraph10",
    "h6",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text9",
    "paragraph11",
    "richTextImg6",
    "image6",
    "text10",
    "richTextImg7",
    "image7",
    "text11",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg9",
    "image9",
    "text13",
    "paragraph14",
    "richTextImg10",
    "image10",
    "text14",
    "paragraph15",
    "richTextImg11",
    "image11",
    "text15",
    "paragraph16",
    "richTextImg12",
    "image12",
    "text16",
    "section8",
    "heading8",
    "paragraph17",
    "richTextImg13",
    "image13",
    "text17",
    "section9",
    "paragraph18",
    "section10",
    "paragraph19",
    "richTextImg14",
    "image14",
    "text18",
    "section11",
    "paragraph20",
    "richTextImg15",
    "image15",
    "text19",
    "section12",
    "paragraph21",
    "section13",
    "paragraph22",
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20",
    "frame173",
    "paragraph23",
    "buttonBase",
    "text21",
    "section14",
    "paragraph24",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],
  header: [
    "header",
    "container4",
    "navigation",
    "button5",
    "buttonBase6",
    "text24",
    "dropdownHeaderNavigationTrigger",
    "button6",
    "buttonBase7",
    "text25",
    "dropdownHeaderNavigationTrigger2",
    "button7",
    "buttonBase8",
    "text26",
    "button8",
    "buttonBase9",
    "text27"
  ],
  container4: [
    "container4",
    "navigation",
    "button5",
    "buttonBase6",
    "text24",
    "dropdownHeaderNavigationTrigger",
    "button6",
    "buttonBase7",
    "text25",
    "dropdownHeaderNavigationTrigger2",
    "button7",
    "buttonBase8",
    "text26",
    "button8",
    "buttonBase9",
    "text27"
  ],
  navigation: [
    "navigation",
    "button5",
    "buttonBase6",
    "text24",
    "dropdownHeaderNavigationTrigger",
    "button6",
    "buttonBase7",
    "text25",
    "dropdownHeaderNavigationTrigger2",
    "button7",
    "buttonBase8",
    "text26",
    "button8",
    "buttonBase9",
    "text27"
  ],
  button5: ["button5", "buttonBase6", "text24"],
  buttonBase6: ["buttonBase6", "text24"],
  text24: ["text24"],
  dropdownHeaderNavigationTrigger: [
    "dropdownHeaderNavigationTrigger",
    "button6",
    "buttonBase7",
    "text25"
  ],
  button6: ["button6", "buttonBase7", "text25"],
  buttonBase7: ["buttonBase7", "text25"],
  text25: ["text25"],
  dropdownHeaderNavigationTrigger2: [
    "dropdownHeaderNavigationTrigger2",
    "button7",
    "buttonBase8",
    "text26"
  ],
  button7: ["button7", "buttonBase8", "text26"],
  buttonBase8: ["buttonBase8", "text26"],
  text26: ["text26"],
  button8: ["button8", "buttonBase9", "text27"],
  buttonBase9: ["buttonBase9", "text27"],
  text27: ["text27"],
  blogPosts: [
    "blogPosts",
    "img",
    "frame178",
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "tooltip",
    "freeBox",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7",
    "section",
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "paragraph",
    "section4",
    "heading4",
    "paragraph2",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "section6",
    "heading6",
    "paragraph4",
    "paragraph5",
    "paragraph6",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg4",
    "image4",
    "text7",
    "richTextImg5",
    "image5",
    "text8",
    "paragraph10",
    "h6",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text9",
    "paragraph11",
    "richTextImg6",
    "image6",
    "text10",
    "richTextImg7",
    "image7",
    "text11",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg9",
    "image9",
    "text13",
    "paragraph14",
    "richTextImg10",
    "image10",
    "text14",
    "paragraph15",
    "richTextImg11",
    "image11",
    "text15",
    "paragraph16",
    "richTextImg12",
    "image12",
    "text16",
    "section8",
    "heading8",
    "paragraph17",
    "richTextImg13",
    "image13",
    "text17",
    "section9",
    "paragraph18",
    "section10",
    "paragraph19",
    "richTextImg14",
    "image14",
    "text18",
    "section11",
    "paragraph20",
    "richTextImg15",
    "image15",
    "text19",
    "section12",
    "paragraph21",
    "section13",
    "paragraph22",
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20",
    "frame173",
    "paragraph23",
    "buttonBase",
    "text21",
    "section14",
    "paragraph24",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],
  img: ["img"],
  frame178: [
    "frame178",
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "tooltip",
    "freeBox",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7"
  ],
  frame170: [
    "frame170",
    "frame176",
    "subheading",
    "frame175",
    "heading",
    "supportingText",
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3",
    "tooltip",
    "freeBox",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7"
  ],
  frame176: ["frame176", "subheading", "frame175", "heading", "supportingText"],
  subheading: ["subheading"],
  frame175: ["frame175", "heading", "supportingText"],
  heading: ["heading"],
  supportingText: ["supportingText"],
  frame177: [
    "frame177",
    "badgeBase",
    "badgeBase2",
    "text2",
    "badgeBase3",
    "text3"
  ],
  badgeBase: ["badgeBase"],
  badgeBase2: ["badgeBase2", "text2"],
  text2: ["text2"],
  badgeBase3: ["badgeBase3", "text3"],
  text3: ["text3"],
  tooltip: [
    "tooltip",
    "freeBox",
    "content3",
    "textAndSupportingText2",
    "text28",
    "supportingText7"
  ],
  freeBox: ["freeBox"],
  content3: ["content3", "textAndSupportingText2", "text28", "supportingText7"],
  textAndSupportingText2: [
    "textAndSupportingText2",
    "text28",
    "supportingText7"
  ],
  text28: ["text28"],
  supportingText7: ["supportingText7"],
  section: [
    "section",
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5",
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "paragraph",
    "section4",
    "heading4",
    "paragraph2",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "section6",
    "heading6",
    "paragraph4",
    "paragraph5",
    "paragraph6",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg4",
    "image4",
    "text7",
    "richTextImg5",
    "image5",
    "text8",
    "paragraph10",
    "h6",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text9",
    "paragraph11",
    "richTextImg6",
    "image6",
    "text10",
    "richTextImg7",
    "image7",
    "text11",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg9",
    "image9",
    "text13",
    "paragraph14",
    "richTextImg10",
    "image10",
    "text14",
    "paragraph15",
    "richTextImg11",
    "image11",
    "text15",
    "paragraph16",
    "richTextImg12",
    "image12",
    "text16",
    "section8",
    "heading8",
    "paragraph17",
    "richTextImg13",
    "image13",
    "text17",
    "section9",
    "paragraph18",
    "section10",
    "paragraph19",
    "richTextImg14",
    "image14",
    "text18",
    "section11",
    "paragraph20",
    "richTextImg15",
    "image15",
    "text19",
    "section12",
    "paragraph21",
    "section13",
    "paragraph22",
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20",
    "frame173",
    "paragraph23",
    "buttonBase",
    "text21",
    "section14",
    "paragraph24",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],
  container: [
    "container",
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5"
  ],
  content: [
    "content",
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5"
  ],
  containerHighlighted: [
    "containerHighlighted",
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3",
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5"
  ],
  containter: [
    "containter",
    "role",
    "supportingText2",
    "scope",
    "supportingText3"
  ],
  role: ["role", "supportingText2"],
  supportingText2: ["supportingText2"],
  scope: ["scope", "supportingText3"],
  supportingText3: ["supportingText3"],
  container2: [
    "container2",
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5"
  ],
  frame179: [
    "frame179",
    "projectObjective",
    "supportingText4",
    "timeline",
    "supportingText5"
  ],
  projectObjective: ["projectObjective", "supportingText4"],
  supportingText4: ["supportingText4"],
  timeline: ["timeline", "supportingText5"],
  supportingText5: ["supportingText5"],
  container3: [
    "container3",
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "paragraph",
    "section4",
    "heading4",
    "paragraph2",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "section6",
    "heading6",
    "paragraph4",
    "paragraph5",
    "paragraph6",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg4",
    "image4",
    "text7",
    "richTextImg5",
    "image5",
    "text8",
    "paragraph10",
    "h6",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text9",
    "paragraph11",
    "richTextImg6",
    "image6",
    "text10",
    "richTextImg7",
    "image7",
    "text11",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg9",
    "image9",
    "text13",
    "paragraph14",
    "richTextImg10",
    "image10",
    "text14",
    "paragraph15",
    "richTextImg11",
    "image11",
    "text15",
    "paragraph16",
    "richTextImg12",
    "image12",
    "text16",
    "section8",
    "heading8",
    "paragraph17",
    "richTextImg13",
    "image13",
    "text17",
    "section9",
    "paragraph18",
    "section10",
    "paragraph19",
    "richTextImg14",
    "image14",
    "text18",
    "section11",
    "paragraph20",
    "richTextImg15",
    "image15",
    "text19",
    "section12",
    "paragraph21",
    "section13",
    "paragraph22",
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20",
    "frame173",
    "paragraph23",
    "buttonBase",
    "text21",
    "section14",
    "paragraph24",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],
  content2: [
    "content2",
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "paragraph",
    "section4",
    "heading4",
    "paragraph2",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "section6",
    "heading6",
    "paragraph4",
    "paragraph5",
    "paragraph6",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg4",
    "image4",
    "text7",
    "richTextImg5",
    "image5",
    "text8",
    "paragraph10",
    "h6",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text9",
    "paragraph11",
    "richTextImg6",
    "image6",
    "text10",
    "richTextImg7",
    "image7",
    "text11",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg9",
    "image9",
    "text13",
    "paragraph14",
    "richTextImg10",
    "image10",
    "text14",
    "paragraph15",
    "richTextImg11",
    "image11",
    "text15",
    "paragraph16",
    "richTextImg12",
    "image12",
    "text16",
    "section8",
    "heading8",
    "paragraph17",
    "richTextImg13",
    "image13",
    "text17",
    "section9",
    "paragraph18",
    "section10",
    "paragraph19",
    "richTextImg14",
    "image14",
    "text18",
    "section11",
    "paragraph20",
    "richTextImg15",
    "image15",
    "text19",
    "section12",
    "paragraph21",
    "section13",
    "paragraph22",
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20",
    "frame173",
    "paragraph23",
    "buttonBase",
    "text21",
    "section14",
    "paragraph24",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],
  richText: [
    "richText",
    "section2",
    "heading2",
    "intro",
    "section3",
    "heading3",
    "paragraph",
    "section4",
    "heading4",
    "paragraph2",
    "richTextImg",
    "image",
    "text4",
    "section5",
    "heading5",
    "paragraph3",
    "section6",
    "heading6",
    "paragraph4",
    "paragraph5",
    "paragraph6",
    "paragraph7",
    "richTextImg2",
    "image2",
    "text5",
    "paragraph8",
    "richTextImg3",
    "image3",
    "text6",
    "section7",
    "heading7",
    "paragraph9",
    "richTextImg4",
    "image4",
    "text7",
    "richTextImg5",
    "image5",
    "text8",
    "paragraph10",
    "h6",
    "blockquote",
    "leftBorder",
    "quoteWrap",
    "quote",
    "text9",
    "paragraph11",
    "richTextImg6",
    "image6",
    "text10",
    "richTextImg7",
    "image7",
    "text11",
    "paragraph12",
    "richTextImg8",
    "image8",
    "text12",
    "paragraph13",
    "richTextImg9",
    "image9",
    "text13",
    "paragraph14",
    "richTextImg10",
    "image10",
    "text14",
    "paragraph15",
    "richTextImg11",
    "image11",
    "text15",
    "paragraph16",
    "richTextImg12",
    "image12",
    "text16",
    "section8",
    "heading8",
    "paragraph17",
    "richTextImg13",
    "image13",
    "text17",
    "section9",
    "paragraph18",
    "section10",
    "paragraph19",
    "richTextImg14",
    "image14",
    "text18",
    "section11",
    "paragraph20",
    "richTextImg15",
    "image15",
    "text19",
    "section12",
    "paragraph21",
    "section13",
    "paragraph22",
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20",
    "frame173",
    "paragraph23",
    "buttonBase",
    "text21",
    "section14",
    "paragraph24",
    "section15",
    "paragraph25",
    "section16",
    "heading9",
    "paragraph26",
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],
  section2: ["section2", "heading2", "intro"],
  heading2: ["heading2"],
  intro: ["intro"],
  section3: ["section3", "heading3", "paragraph"],
  heading3: ["heading3"],
  paragraph: ["paragraph"],
  section4: ["section4", "heading4", "paragraph2"],
  heading4: ["heading4"],
  paragraph2: ["paragraph2"],
  richTextImg: ["richTextImg", "image", "text4"],
  image: ["image"],
  text4: ["text4"],
  section5: ["section5", "heading5", "paragraph3"],
  heading5: ["heading5"],
  paragraph3: ["paragraph3"],
  section6: ["section6", "heading6", "paragraph4"],
  heading6: ["heading6"],
  paragraph4: ["paragraph4"],
  paragraph5: ["paragraph5"],
  paragraph6: ["paragraph6"],
  paragraph7: ["paragraph7"],
  richTextImg2: ["richTextImg2", "image2", "text5"],
  image2: ["image2"],
  text5: ["text5"],
  paragraph8: ["paragraph8"],
  richTextImg3: ["richTextImg3", "image3", "text6"],
  image3: ["image3"],
  text6: ["text6"],
  section7: ["section7", "heading7", "paragraph9"],
  heading7: ["heading7"],
  paragraph9: ["paragraph9"],
  richTextImg4: ["richTextImg4", "image4", "text7"],
  image4: ["image4"],
  text7: ["text7"],
  richTextImg5: ["richTextImg5", "image5", "text8"],
  image5: ["image5"],
  text8: ["text8"],
  paragraph10: ["paragraph10", "h6"],
  h6: ["h6"],
  blockquote: ["blockquote", "leftBorder", "quoteWrap", "quote", "text9"],
  leftBorder: ["leftBorder"],
  quoteWrap: ["quoteWrap", "quote", "text9"],
  quote: ["quote"],
  text9: ["text9"],
  paragraph11: ["paragraph11"],
  richTextImg6: ["richTextImg6", "image6", "text10"],
  image6: ["image6"],
  text10: ["text10"],
  richTextImg7: ["richTextImg7", "image7", "text11"],
  image7: ["image7"],
  text11: ["text11"],
  paragraph12: ["paragraph12"],
  richTextImg8: ["richTextImg8", "image8", "text12"],
  image8: ["image8"],
  text12: ["text12"],
  paragraph13: ["paragraph13"],
  richTextImg9: ["richTextImg9", "image9", "text13"],
  image9: ["image9"],
  text13: ["text13"],
  paragraph14: ["paragraph14"],
  richTextImg10: ["richTextImg10", "image10", "text14"],
  image10: ["image10"],
  text14: ["text14"],
  paragraph15: ["paragraph15"],
  richTextImg11: ["richTextImg11", "image11", "text15"],
  image11: ["image11"],
  text15: ["text15"],
  paragraph16: ["paragraph16"],
  richTextImg12: ["richTextImg12", "image12", "text16"],
  image12: ["image12"],
  text16: ["text16"],
  section8: ["section8", "heading8", "paragraph17"],
  heading8: ["heading8"],
  paragraph17: ["paragraph17"],
  richTextImg13: ["richTextImg13", "image13", "text17"],
  image13: ["image13"],
  text17: ["text17"],
  section9: ["section9", "paragraph18"],
  paragraph18: ["paragraph18"],
  section10: ["section10", "paragraph19"],
  paragraph19: ["paragraph19"],
  richTextImg14: ["richTextImg14", "image14", "text18"],
  image14: ["image14"],
  text18: ["text18"],
  section11: ["section11", "paragraph20"],
  paragraph20: ["paragraph20"],
  richTextImg15: ["richTextImg15", "image15", "text19"],
  image15: ["image15"],
  text19: ["text19"],
  section12: ["section12", "paragraph21"],
  paragraph21: ["paragraph21"],
  section13: ["section13", "paragraph22"],
  paragraph22: ["paragraph22"],
  richTextImg16: [
    "richTextImg16",
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19",
    "text20"
  ],
  frame180: [
    "frame180",
    "frame174",
    "image16",
    "image17",
    "frame181",
    "image18",
    "image19"
  ],
  frame174: ["frame174", "image16", "image17"],
  image16: ["image16"],
  image17: ["image17"],
  frame181: ["frame181", "image18", "image19"],
  image18: ["image18"],
  image19: ["image19"],
  text20: ["text20"],
  frame173: ["frame173", "paragraph23", "buttonBase", "text21"],
  paragraph23: ["paragraph23"],
  buttonBase: ["buttonBase", "text21"],
  text21: ["text21"],
  section14: ["section14", "paragraph24"],
  paragraph24: ["paragraph24"],
  section15: ["section15", "paragraph25"],
  paragraph25: ["paragraph25"],
  section16: ["section16", "heading9", "paragraph26"],
  heading9: ["heading9"],
  paragraph26: ["paragraph26"],
  section17: [
    "section17",
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],
  authorAndSocialLinks: [
    "authorAndSocialLinks",
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6",
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],
  avatarLabelGroup: [
    "avatarLabelGroup",
    "avatar",
    "textAndSupportingText",
    "text22",
    "supportingText6"
  ],
  avatar: ["avatar"],
  textAndSupportingText: ["textAndSupportingText", "text22", "supportingText6"],
  text22: ["text22"],
  supportingText6: ["supportingText6"],
  socialLinks: [
    "socialLinks",
    "button",
    "buttonBase2",
    "text23",
    "button2",
    "buttonBase3",
    "button3",
    "buttonBase4",
    "button4",
    "buttonBase5",
    "socialIcon"
  ],
  button: ["button", "buttonBase2", "text23"],
  buttonBase2: ["buttonBase2", "text23"],
  text23: ["text23"],
  button2: ["button2", "buttonBase3"],
  buttonBase3: ["buttonBase3"],
  button3: ["button3", "buttonBase4"],
  buttonBase4: ["buttonBase4"],
  button4: ["button4", "buttonBase5", "socialIcon"],
  buttonBase5: ["buttonBase5", "socialIcon"],
  socialIcon: ["socialIcon"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: "div";
  container4: "div";
  navigation: "div";
  button5: "div";
  buttonBase6: "div";
  text24: "div";
  dropdownHeaderNavigationTrigger: "div";
  button6: "div";
  buttonBase7: "div";
  text25: "div";
  dropdownHeaderNavigationTrigger2: "a";
  button7: "div";
  buttonBase8: "div";
  text26: "div";
  button8: "div";
  buttonBase9: "div";
  text27: "div";
  blogPosts: "div";
  img: typeof p.PlasmicImg;
  frame178: "div";
  frame170: "div";
  frame176: "div";
  subheading: "div";
  frame175: "div";
  heading: "div";
  supportingText: "div";
  frame177: "div";
  badgeBase: "div";
  badgeBase2: "div";
  text2: "div";
  badgeBase3: "div";
  text3: "div";
  tooltip: "div";
  freeBox: "div";
  content3: "div";
  textAndSupportingText2: "div";
  text28: "div";
  supportingText7: "div";
  section: "div";
  container: "div";
  content: "div";
  containerHighlighted: "div";
  containter: "div";
  role: "div";
  supportingText2: "div";
  scope: "div";
  supportingText3: "div";
  container2: "div";
  frame179: "div";
  projectObjective: "div";
  supportingText4: "div";
  timeline: "div";
  supportingText5: "div";
  container3: "div";
  content2: "div";
  richText: "div";
  section2: "div";
  heading2: "div";
  intro: "div";
  section3: "div";
  heading3: "div";
  paragraph: "div";
  section4: "div";
  heading4: "div";
  paragraph2: "div";
  richTextImg: "div";
  image: "div";
  text4: "div";
  section5: "div";
  heading5: "div";
  paragraph3: "div";
  section6: "div";
  heading6: "div";
  paragraph4: "div";
  paragraph5: "div";
  paragraph6: "div";
  paragraph7: "div";
  richTextImg2: "div";
  image2: "div";
  text5: "div";
  paragraph8: "div";
  richTextImg3: "div";
  image3: "div";
  text6: "div";
  section7: "div";
  heading7: "div";
  paragraph9: "div";
  richTextImg4: "div";
  image4: "div";
  text7: "div";
  richTextImg5: "div";
  image5: "div";
  text8: "div";
  paragraph10: "div";
  h6: "h6";
  blockquote: "div";
  leftBorder: "div";
  quoteWrap: "div";
  quote: "div";
  text9: "div";
  paragraph11: "div";
  richTextImg6: "div";
  image6: "div";
  text10: "div";
  richTextImg7: "div";
  image7: "div";
  text11: "div";
  paragraph12: "div";
  richTextImg8: "div";
  image8: "div";
  text12: "div";
  paragraph13: "div";
  richTextImg9: "div";
  image9: "div";
  text13: "div";
  paragraph14: "div";
  richTextImg10: "div";
  image10: "div";
  text14: "div";
  paragraph15: "div";
  richTextImg11: "div";
  image11: "div";
  text15: "div";
  paragraph16: "div";
  richTextImg12: "div";
  image12: "div";
  text16: "div";
  section8: "div";
  heading8: "div";
  paragraph17: "div";
  richTextImg13: "div";
  image13: "div";
  text17: "div";
  section9: "div";
  paragraph18: "div";
  section10: "div";
  paragraph19: "div";
  richTextImg14: "div";
  image14: "div";
  text18: "div";
  section11: "div";
  paragraph20: "div";
  richTextImg15: "div";
  image15: "div";
  text19: "div";
  section12: "div";
  paragraph21: "div";
  section13: "div";
  paragraph22: "div";
  richTextImg16: "div";
  frame180: "div";
  frame174: "div";
  image16: "div";
  image17: "div";
  frame181: "div";
  image18: "div";
  image19: "div";
  text20: "div";
  frame173: "div";
  paragraph23: "div";
  buttonBase: "div";
  text21: "div";
  section14: "div";
  paragraph24: "div";
  section15: "div";
  paragraph25: "div";
  section16: "div";
  heading9: "div";
  paragraph26: "div";
  section17: "div";
  authorAndSocialLinks: "div";
  avatarLabelGroup: "div";
  avatar: "div";
  textAndSupportingText: "div";
  text22: "div";
  supportingText6: "div";
  socialLinks: "div";
  button: "div";
  buttonBase2: "div";
  text23: "div";
  button2: "div";
  buttonBase3: "div";
  button3: "div";
  buttonBase4: "div";
  button4: "div";
  buttonBase5: "div";
  socialIcon: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBillie__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBillie__VariantsArgs;
    args?: PlasmicBillie__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBillie__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicBillie__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicBillie__ArgProps,
      internalVariantPropNames: PlasmicBillie__VariantProps
    });

    return PlasmicBillie__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBillie";
  } else {
    func.displayName = `PlasmicBillie.${nodeName}`;
  }
  return func;
}

export const PlasmicBillie = Object.assign(
  // Top-level PlasmicBillie renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    container4: makeNodeComponent("container4"),
    navigation: makeNodeComponent("navigation"),
    button5: makeNodeComponent("button5"),
    buttonBase6: makeNodeComponent("buttonBase6"),
    text24: makeNodeComponent("text24"),
    dropdownHeaderNavigationTrigger: makeNodeComponent(
      "dropdownHeaderNavigationTrigger"
    ),
    button6: makeNodeComponent("button6"),
    buttonBase7: makeNodeComponent("buttonBase7"),
    text25: makeNodeComponent("text25"),
    dropdownHeaderNavigationTrigger2: makeNodeComponent(
      "dropdownHeaderNavigationTrigger2"
    ),
    button7: makeNodeComponent("button7"),
    buttonBase8: makeNodeComponent("buttonBase8"),
    text26: makeNodeComponent("text26"),
    button8: makeNodeComponent("button8"),
    buttonBase9: makeNodeComponent("buttonBase9"),
    text27: makeNodeComponent("text27"),
    blogPosts: makeNodeComponent("blogPosts"),
    img: makeNodeComponent("img"),
    frame178: makeNodeComponent("frame178"),
    frame170: makeNodeComponent("frame170"),
    frame176: makeNodeComponent("frame176"),
    subheading: makeNodeComponent("subheading"),
    frame175: makeNodeComponent("frame175"),
    heading: makeNodeComponent("heading"),
    supportingText: makeNodeComponent("supportingText"),
    frame177: makeNodeComponent("frame177"),
    badgeBase: makeNodeComponent("badgeBase"),
    badgeBase2: makeNodeComponent("badgeBase2"),
    text2: makeNodeComponent("text2"),
    badgeBase3: makeNodeComponent("badgeBase3"),
    text3: makeNodeComponent("text3"),
    tooltip: makeNodeComponent("tooltip"),
    freeBox: makeNodeComponent("freeBox"),
    content3: makeNodeComponent("content3"),
    textAndSupportingText2: makeNodeComponent("textAndSupportingText2"),
    text28: makeNodeComponent("text28"),
    supportingText7: makeNodeComponent("supportingText7"),
    section: makeNodeComponent("section"),
    container: makeNodeComponent("container"),
    content: makeNodeComponent("content"),
    containerHighlighted: makeNodeComponent("containerHighlighted"),
    containter: makeNodeComponent("containter"),
    role: makeNodeComponent("role"),
    supportingText2: makeNodeComponent("supportingText2"),
    scope: makeNodeComponent("scope"),
    supportingText3: makeNodeComponent("supportingText3"),
    container2: makeNodeComponent("container2"),
    frame179: makeNodeComponent("frame179"),
    projectObjective: makeNodeComponent("projectObjective"),
    supportingText4: makeNodeComponent("supportingText4"),
    timeline: makeNodeComponent("timeline"),
    supportingText5: makeNodeComponent("supportingText5"),
    container3: makeNodeComponent("container3"),
    content2: makeNodeComponent("content2"),
    richText: makeNodeComponent("richText"),
    section2: makeNodeComponent("section2"),
    heading2: makeNodeComponent("heading2"),
    intro: makeNodeComponent("intro"),
    section3: makeNodeComponent("section3"),
    heading3: makeNodeComponent("heading3"),
    paragraph: makeNodeComponent("paragraph"),
    section4: makeNodeComponent("section4"),
    heading4: makeNodeComponent("heading4"),
    paragraph2: makeNodeComponent("paragraph2"),
    richTextImg: makeNodeComponent("richTextImg"),
    image: makeNodeComponent("image"),
    text4: makeNodeComponent("text4"),
    section5: makeNodeComponent("section5"),
    heading5: makeNodeComponent("heading5"),
    paragraph3: makeNodeComponent("paragraph3"),
    section6: makeNodeComponent("section6"),
    heading6: makeNodeComponent("heading6"),
    paragraph4: makeNodeComponent("paragraph4"),
    paragraph5: makeNodeComponent("paragraph5"),
    paragraph6: makeNodeComponent("paragraph6"),
    paragraph7: makeNodeComponent("paragraph7"),
    richTextImg2: makeNodeComponent("richTextImg2"),
    image2: makeNodeComponent("image2"),
    text5: makeNodeComponent("text5"),
    paragraph8: makeNodeComponent("paragraph8"),
    richTextImg3: makeNodeComponent("richTextImg3"),
    image3: makeNodeComponent("image3"),
    text6: makeNodeComponent("text6"),
    section7: makeNodeComponent("section7"),
    heading7: makeNodeComponent("heading7"),
    paragraph9: makeNodeComponent("paragraph9"),
    richTextImg4: makeNodeComponent("richTextImg4"),
    image4: makeNodeComponent("image4"),
    text7: makeNodeComponent("text7"),
    richTextImg5: makeNodeComponent("richTextImg5"),
    image5: makeNodeComponent("image5"),
    text8: makeNodeComponent("text8"),
    paragraph10: makeNodeComponent("paragraph10"),
    h6: makeNodeComponent("h6"),
    blockquote: makeNodeComponent("blockquote"),
    leftBorder: makeNodeComponent("leftBorder"),
    quoteWrap: makeNodeComponent("quoteWrap"),
    quote: makeNodeComponent("quote"),
    text9: makeNodeComponent("text9"),
    paragraph11: makeNodeComponent("paragraph11"),
    richTextImg6: makeNodeComponent("richTextImg6"),
    image6: makeNodeComponent("image6"),
    text10: makeNodeComponent("text10"),
    richTextImg7: makeNodeComponent("richTextImg7"),
    image7: makeNodeComponent("image7"),
    text11: makeNodeComponent("text11"),
    paragraph12: makeNodeComponent("paragraph12"),
    richTextImg8: makeNodeComponent("richTextImg8"),
    image8: makeNodeComponent("image8"),
    text12: makeNodeComponent("text12"),
    paragraph13: makeNodeComponent("paragraph13"),
    richTextImg9: makeNodeComponent("richTextImg9"),
    image9: makeNodeComponent("image9"),
    text13: makeNodeComponent("text13"),
    paragraph14: makeNodeComponent("paragraph14"),
    richTextImg10: makeNodeComponent("richTextImg10"),
    image10: makeNodeComponent("image10"),
    text14: makeNodeComponent("text14"),
    paragraph15: makeNodeComponent("paragraph15"),
    richTextImg11: makeNodeComponent("richTextImg11"),
    image11: makeNodeComponent("image11"),
    text15: makeNodeComponent("text15"),
    paragraph16: makeNodeComponent("paragraph16"),
    richTextImg12: makeNodeComponent("richTextImg12"),
    image12: makeNodeComponent("image12"),
    text16: makeNodeComponent("text16"),
    section8: makeNodeComponent("section8"),
    heading8: makeNodeComponent("heading8"),
    paragraph17: makeNodeComponent("paragraph17"),
    richTextImg13: makeNodeComponent("richTextImg13"),
    image13: makeNodeComponent("image13"),
    text17: makeNodeComponent("text17"),
    section9: makeNodeComponent("section9"),
    paragraph18: makeNodeComponent("paragraph18"),
    section10: makeNodeComponent("section10"),
    paragraph19: makeNodeComponent("paragraph19"),
    richTextImg14: makeNodeComponent("richTextImg14"),
    image14: makeNodeComponent("image14"),
    text18: makeNodeComponent("text18"),
    section11: makeNodeComponent("section11"),
    paragraph20: makeNodeComponent("paragraph20"),
    richTextImg15: makeNodeComponent("richTextImg15"),
    image15: makeNodeComponent("image15"),
    text19: makeNodeComponent("text19"),
    section12: makeNodeComponent("section12"),
    paragraph21: makeNodeComponent("paragraph21"),
    section13: makeNodeComponent("section13"),
    paragraph22: makeNodeComponent("paragraph22"),
    richTextImg16: makeNodeComponent("richTextImg16"),
    frame180: makeNodeComponent("frame180"),
    frame174: makeNodeComponent("frame174"),
    image16: makeNodeComponent("image16"),
    image17: makeNodeComponent("image17"),
    frame181: makeNodeComponent("frame181"),
    image18: makeNodeComponent("image18"),
    image19: makeNodeComponent("image19"),
    text20: makeNodeComponent("text20"),
    frame173: makeNodeComponent("frame173"),
    paragraph23: makeNodeComponent("paragraph23"),
    buttonBase: makeNodeComponent("buttonBase"),
    text21: makeNodeComponent("text21"),
    section14: makeNodeComponent("section14"),
    paragraph24: makeNodeComponent("paragraph24"),
    section15: makeNodeComponent("section15"),
    paragraph25: makeNodeComponent("paragraph25"),
    section16: makeNodeComponent("section16"),
    heading9: makeNodeComponent("heading9"),
    paragraph26: makeNodeComponent("paragraph26"),
    section17: makeNodeComponent("section17"),
    authorAndSocialLinks: makeNodeComponent("authorAndSocialLinks"),
    avatarLabelGroup: makeNodeComponent("avatarLabelGroup"),
    avatar: makeNodeComponent("avatar"),
    textAndSupportingText: makeNodeComponent("textAndSupportingText"),
    text22: makeNodeComponent("text22"),
    supportingText6: makeNodeComponent("supportingText6"),
    socialLinks: makeNodeComponent("socialLinks"),
    button: makeNodeComponent("button"),
    buttonBase2: makeNodeComponent("buttonBase2"),
    text23: makeNodeComponent("text23"),
    button2: makeNodeComponent("button2"),
    buttonBase3: makeNodeComponent("buttonBase3"),
    button3: makeNodeComponent("button3"),
    buttonBase4: makeNodeComponent("buttonBase4"),
    button4: makeNodeComponent("button4"),
    buttonBase5: makeNodeComponent("buttonBase5"),
    socialIcon: makeNodeComponent("socialIcon"),

    // Metadata about props expected for PlasmicBillie
    internalVariantProps: PlasmicBillie__VariantProps,
    internalArgProps: PlasmicBillie__ArgProps
  }
);

export default PlasmicBillie;
/* prettier-ignore-end */
